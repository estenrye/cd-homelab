apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: cluster-aws
  labels:
    provider: aws
    cluster: eks
spec:
  compositeTypeRef:
    apiVersion: rye.ninja/v1alpha1
    kind: CompositeKubernetesCluster
  patchSets:
  - name: metadata
    patches:
    - fromFieldPath: metadata.labels
      type: FromCompositeFieldPath
  resources:
  - name: ekscluster
    base:
      apiVersion: eks.aws.upbound.io/v1beta1
      kind: Cluster
      spec:
        forProvider:
          region: us-east-2
          version: "1.28"
          roleArnSelector:
            matchControllerRef: true
            matchLabels:
              role: controlplane
          resourcesVpcConfig:
            endpointPrivateAccess: true
            endpointPublicAccess: true
            subnetIdSelector:
              matchControllerRef: true
    patches:
    - fromFieldPath: metadata.annotations[crossplane.io/external-name]
      toFieldPath: metadata.annotations[crossplane.io/external-name]
      type: FromCompositeFieldPath
    - fromFieldPath: spec.parameters.version
      toFieldPath: spec.forProvider.version
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.uid
      toFieldPath: spec.writeConnectionSecretToRef.name
      transforms:
        - type: string
          string:
            fmt: "%s-ekscluster"
            type: Format
      type: FromCompositeFieldPath
    - type: ToCompositeFieldPath
      fromFieldPath: metadata.annotations[crossplane.io/external-name]
      toFieldPath: status.clusterName
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.status
      toFieldPath: status.controlPlaneStatus
    - fromFieldPath: spec.writeConnectionSecretToRef.namespace
      toFieldPath: spec.writeConnectionSecretToRef.namespace
      type: FromCompositeFieldPath
    readinessChecks:
    - type: MatchString
      fieldPath: status.atProvider.status
      matchString: ACTIVE
    connectionDetails:
      - fromConnectionSecretKey: kubeconfig
  - name: eksnodegroup
    base:
      apiVersion: eks.aws.upbound.io/v1beta1
      kind: NodeGroup
      spec:
        forProvider:
          region: us-east-2
          clusterNameSelector:
            matchControllerRef: true
          nodeRoleSelector:
            matchControllerRef: true
            matchLabels:
              role: nodegroup
          subnetSelector:
            matchLabels:
              access: public
          scalingConfig:
            minSize: 1
            maxSize: 10
            desiredSize: 1
          instanceTypes:
            - t3.small
    patches:
    - fromFieldPath: spec.parameters.nodeSize
      toFieldPath: spec.forProvider.instanceTypes[0]
      transforms:
        - type: map
          map:
            small: t3.small
            medium: t3.medium
            large: t3.large
      type: FromCompositeFieldPath
    - fromFieldPath: spec.parameters.minNodeCount
      toFieldPath: spec.forProvider.scalingConfig.minSize
      type: FromCompositeFieldPath
    - fromFieldPath: spec.parameters.minNodeCount
      toFieldPath: spec.forProvider.scalingConfig.desiredSize
      type: FromCompositeFieldPath
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.status
      toFieldPath: status.nodePoolStatus
    readinessChecks:
    - type: MatchString
      fieldPath: status.atProvider.status
      matchString: ACTIVE
  - name: iamrole-controlplane
    readinessChecks:	
      - matchCondition:	
          status: 'True'	
          type: Ready	
        type: MatchCondition
    base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: Role
      metadata:
        labels:
          role: controlplane
      spec:
        forProvider:
          assumeRolePolicyDocument: |
            {
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Effect": "Allow",
                      "Principal": {
                          "Service": [
                              "eks.amazonaws.com"
                          ]
                      },
                      "Action": [
                          "sts:AssumeRole"
                      ]
                  }
              ]
            }
  - name: iamrole-nodegroup
    readinessChecks:	
      - matchCondition:	
          status: 'True'	
          type: Ready	
        type: MatchCondition
    base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: Role
      metadata:
        labels:
          role: nodegroup
      spec:
        forProvider:
          assumeRolePolicyDocument: |
            {
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Effect": "Allow",
                      "Principal": {
                          "Service": [
                              "ec2.amazonaws.com"
                          ]
                      },
                      "Action": [
                          "sts:AssumeRole"
                      ]
                  }
              ]
            }
  - name: iamattachment-controlplane
    readinessChecks:	
      - matchCondition:	
          status: 'True'	
          type: Ready	
        type: MatchCondition
    base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: RolePolicyAttachment
      spec:
        forProvider:
          policyArn: arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
          roleNameSelector:
            matchControllerRef: true
            matchLabels:
              role: controlplane
  - name: iamattachment-service
    readinessChecks:	
      - matchCondition:	
          status: 'True'	
          type: Ready	
        type: MatchCondition
    base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: RolePolicyAttachment
      spec:
        forProvider:
          policyArn: arn:aws:iam::aws:policy/AmazonEKSServicePolicy
          roleNameSelector:
            matchControllerRef: true
            matchLabels:
              role: controlplane
  - name: iamattachment-worker
    readinessChecks:	
      - matchCondition:	
          status: 'True'	
          type: Ready	
        type: MatchCondition
    base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: RolePolicyAttachment
      spec:
        forProvider:
          policyArn: arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
          roleNameSelector:
            matchControllerRef: true
            matchLabels:
              role: nodegroup
  - name: iamattachment-cni
    readinessChecks:	
      - matchCondition:	
          status: 'True'	
          type: Ready	
        type: MatchCondition
    base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: RolePolicyAttachment
      spec:
        forProvider:
          policyArn: arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
          roleNameSelector:
            matchControllerRef: true
            matchLabels:
              role: nodegroup
  - name: iamattachment-registry
    readinessChecks:	
      - matchCondition:	
          status: 'True'	
          type: Ready	
        type: MatchCondition
    base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: RolePolicyAttachment
      spec:
        forProvider:
          policyArn: arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
          roleNameSelector:
            matchControllerRef: true
            matchLabels:
              role: nodegroup
  - name: vpc-nodepool
    readinessChecks:	
      - matchCondition:	
          status: 'True'	
          type: Ready	
        type: MatchCondition
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: VPC
      spec:
        forProvider:
          region: us-east-2
          cidrBlock: 10.0.0.0/16
          tags:
          - key: Name
            value: devops-catalog
          - key: kubernetes.io/cluster/devops-catalog
            value: shared
  - name: sc-nodepool
    readinessChecks:	
      - matchCondition:	
          status: 'True'	
          type: Ready	
        type: MatchCondition
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: SecurityGroup
      spec:
        forProvider:
          description: Cluster communication with worker nodes
          groupName: devops-catalog
          region: us-east-2
          vpcIdSelector:
            matchControllerRef: true
          egress:
          - fromPort: 0
            toPort: 0
            ipProtocol: "-1"
            ipRanges:
            - cidrIp: "0.0.0.0/0"
  - name: subnet-nodepool-1a
    readinessChecks:	
      - matchCondition:	
          status: 'True'	
          type: Ready	
        type: MatchCondition
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: Subnet
      metadata:
        labels:
          zone: us-east-2a
          access: public
      spec:
        forProvider:
          region: us-east-2
          availabilityZone: us-east-2a
          cidrBlock: 10.0.0.0/24
          vpcIdSelector:
            matchControllerRef: true
          mapPublicIPOnLaunch: true
          tags:
            - key: Name
              value: devops-catalog
            - key: kubernetes.io/cluster/devops-catalog
              value: shared
  - name: subnet-nodepool-1b
    readinessChecks:	
      - matchCondition:	
          status: 'True'	
          type: Ready	
        type: MatchCondition
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: Subnet
      metadata:
        labels:
          zone: us-east-2b
          access: public
      spec:
        forProvider:
          region: us-east-2
          availabilityZone: us-east-2b
          cidrBlock: 10.0.1.0/24
          vpcIdSelector:
            matchControllerRef: true
          mapPublicIPOnLaunch: true
          tags:
            - key: Name
              value: devops-catalog
            - key: kubernetes.io/cluster/devops-catalog
              value: shared
  - name: subnet-nodepool-1c
    readinessChecks:	
      - matchCondition:	
          status: 'True'	
          type: Ready	
        type: MatchCondition
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: Subnet
      metadata:
        labels:
          zone: us-east-2c
          access: public
      spec:
        forProvider:
          region: us-east-2
          availabilityZone: us-east-2c
          cidrBlock: 10.0.2.0/24
          vpcIdSelector:
            matchControllerRef: true
          mapPublicIPOnLaunch: true
          tags:
            - key: Name
              value: devops-catalog
            - key: kubernetes.io/cluster/devops-catalog
              value: shared
  - name: gateway
    readinessChecks:	
      - matchCondition:	
          status: 'True'	
          type: Ready	
        type: MatchCondition
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: InternetGateway
      spec:
        forProvider:
          region: us-east-2
          vpcIdSelector:
            matchControllerRef: true
  - name: routetable
    readinessChecks:	
      - matchCondition:	
          status: 'True'	
          type: Ready	
        type: MatchCondition
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: RouteTable
      spec:
        forProvider:
          region: us-east-2
          vpcIdSelector:
            matchControllerRef: true
          routes:
            - destinationCidrBlock: 0.0.0.0/0
              gatewayIdSelector:
                matchControllerRef: true
          associations:
            - subnetIdSelector:
                matchControllerRef: true
                matchLabels:
                  zone: us-east-2a
                  access: public
            - subnetIdSelector:
                matchControllerRef: true
                matchLabels:
                  zone: us-east-2b
                  access: public
            - subnetIdSelector:
                matchControllerRef: true
                matchLabels:
                  zone: us-east-2c
                  access: public