apiVersion: argoproj.io/v1beta1
kind: ArgoCD
metadata:
  name: argocd
  namespace: argocd
spec:
  version: v2.14.2
  statusBadgeEnabled: true
  resourceTrackingMethod: annotation+label
  oidcConfig: |
    name: JumpCloud
    issuer: https://oauth.id.jumpcloud.com/
    clientID: 959927a1-c12f-4e63-83b4-b40f04f2c5e7
    cliClientID: 959927a1-c12f-4e63-83b4-b40f04f2c5e7
    enablePKCEAuthentication: true
    requestedScopes:
    - openid
    - profile
    - email
    - groups
  applicationSet:
    enabled: true
    sourceNamespaces:
    - argocd
  ha:
    enabled: true
    resources: {}
  kustomizeBuildOptions: --enable-helm --enable-alpha-plugins --enable-exec
  kustomizeVersions: 
  - path: /usr/local/bin/kustomize-5.1.0
    version: v5.1.0
  monitoring:
    enabled: true
  notifications:
    enabled: true
  prometheus:
    enabled: false
  rbac:
    defaultPolicy: role:readonly
    policy: |
      g, ACL_ArgoCD_Global-Administrator, role:admin
    scopes: '[groups, email]'
  configManagementPlugins: |
    kustomize-helm-envsubst.yaml: |
      apiVersion: argoproj.io/v1alpha1
      kind: ConfigManagementPlugin
      metadata:
        name: kustomize-helm-envsubst
      spec:
  repo:
    enabled: true
    logFormat: json
    logLevel: info
    sidecarContainers:
      - name: kustomize-helm-envsubst
        image: estenrye/argocd-cmp:argo-cmp-v0.1.2-v1.29.13
        command: [/var/run/argocd/argocd-cmp-server]
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
        volumeMounts:
          - mountPath: /var/run/argocd
            name: var-files
          - mountPath: /home/argocd/cmp-server/plugins
            name: plugins
          # Starting with v2.4, do NOT mount the same tmp volume as the repo-server container. The filesystem separation helps 
          # mitigate path traversal attacks.
          - mountPath: /tmp
            name: cmp-tmp
    volumes:
      - emptyDir: {}
        name: cmp-tmp

  # redis:
  #   enabled: true
  server:
    enabled: true
    enableRolloutsUI: true
    logFormat: json
    logLevel: info
    autoscale:
      enabled: true
    grpc:
      ingress:
        annotations:
          cert-manager.io/cluster-issuer: zerossl-production
        enabled: true
        ingressClassName: haproxy
        tls:
          - hosts: []
            secretName: argocd-grpc-ingress-tls
    ingress:
      annotations:
        cert-manager.io/cluster-issuer: zerossl-production
      enabled: true
      ingressClassName: haproxy
      path: /
      tls:
        - hosts: []
          secretName: argocd-ingress-tls
    insecure: true
  sso:
    dex:
      env:
        - name: ARGO_WORKFLOWS_SSO_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: clientSecret
              name: argo-workflows-sso-client-secret
      config: |
        staticClients:
          - id: argo-workflows-sso
            name: Argo Workflow
            redirectURIs:
              - 'https://argo-workflows.rspot.rye.ninja/oauth2/callback'
            secretEnv: ARGO_WORKFLOWS_SSO_CLIENT_SECRET