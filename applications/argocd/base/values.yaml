configs:
  cm:
    url: https://argocd.example.com
    kustomize.buildOptions: --enable-helm
    server.rbac.log.enforce.enable: true

    ## Ref: https://argo-cd.readthedocs.io/en/latest/operator-manual/rbac/#exec-resource
    exec.enabled: false

    oidc.config: |
      name: JumpCloud
      issuer: https://oauth.id.jumpcloud.com/
      clientID: $argocd-oidc-credentials:username
      clientSecret: $argocd-oidc-credentials:credential
      requestedScopes:
      - openid
      - profile
      - email
      - groups
  rbac:
    policy.csv: |
      g, App_ArgoCD_Administrator, role:admin
    policy.default: role:readonly
    scopes: '[groups, email]'

  cmp:
    create: true
    plugins:
      kustomize-env:
        init:
          command: ["/bin/sh", "-c"]
          args: ["kustomize build --enable-helm --load-restrictor LoadRestrictionsNone | envsubst"]
        generate:
          command: ["/bin/sh", "-c"]
          args: ["kustomize build --enable-helm --load-restrictor LoadRestrictionsNone | envsubst"]
        discover:
          find:
            glob: "**/env.properties"
            # command: [sh, -c, find . -name env.yaml]

  repositories:
    cd-homelab:
      name: cd-homelab
      url: git@github.com:estenrye/cd-homelab
      type: git

redis-ha:
  enabled: true
  exporter:
    enabled: true
  
controller:
  replicas: 1
  metrics:
    enabled: true
    serviceMonitor:
      enabled: false

dex:
  metrics:
    enabled: true
    serviceMonitor:
      enabled: false


server:
  autoscaling:
    enabled: true
    minReplicas: 2
  ingress:
    # -- Enable an ingress resource for the Argo CD server
    enabled: true
    # -- Additional ingress annotations
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod-dns01
      external-dns.alpha.kubernetes.io/hostname: argocd.example.com
      nginx.ingress.kubernetes.io/ssl-passthrough: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    # -- Additional ingress labels
    labels: {}
    # -- Defines which ingress controller will implement the resource
    ingressClassName: "nginx"

    # -- List of ingress hosts
    ## Argo Ingress.
    ## Hostnames must be provided if Ingress is enabled.
    ## Secrets must be manually created in the namespace
    hosts:
      - argocd.example.com

    # -- List of ingress paths
    paths:
      - /
    # -- Ingress path type. One of `Exact`, `Prefix` or `ImplementationSpecific`
    pathType: Prefix
    # -- Additional ingress paths
    extraPaths: []
      # - path: /*
      #   pathType: Prefix
      #   backend:
      #     service:
      #       name: ssl-redirect
      #       port:
      #         name: use-annotation

    # -- Ingress TLS configuration
    tls:
      - secretName: argocd-secret
        hosts:
          - argocd.example.com

    # -- Uses `server.service.servicePortHttps` instead `server.service.servicePortHttp`
    https: true
  monitoring:
    enabled: true
    serviceMonitor:
      enabled: false

repoServer:
  autoscaling:
    enabled: true
    minReplicas: 2
  metrics:
    enabled: true
    serviceMonitor:
      enabled: false

  extraContainers:
    - name: kustomize-env
      command:
        - "/var/run/argocd/argocd-cmp-server"
      image: estenrye/kustomize-env:0.1.2
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        - mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: kustomize-env.yaml
          name: argocd-cmp-cm

  volumes:
   - name: argocd-cmp-cm
     configMap:
       name: argocd-cmp-cm

applicationSet:
  replicas: 2
  metrics:
    enabled: true
    serviceMonitor:
      enabled: false

notifications:
  metrics:
    enabled: true
    serviceMonitor:
      enabled: false
