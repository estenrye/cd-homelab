apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: minecraft
  namespace: argocd
spec:
  generators:
  - list:
      elements:
      - name: arrendelle-winter
        server: kubernetes.default.svc
        downloadWorldUrl: https://s3.us-west-1.wasabisys.com/minecraft-rye-ninja/arrendelle-winter.zip
        jvmMemory: 2048M
        requestMemory: 4096Mi
        requestCPU: 3000m
        limitMemory: 7168Mi
        limitCPU: 6000m
  template:
    metadata:
      name: '{{ .name }}-minecraft' # 'name' field of the Secret
    spec:
      project: "default"
      source:
        chart: minecraft
        repoURL: https://itzg.github.io/minecraft-server-charts/
        targetRevision: 4.11.0
        helm:
          releaseName: "{{ .name }}"
          valuesObject: 
            # ref: https://hub.docker.com/r/itzg/minecraft-server/
            image:
              repository: itzg/minecraft-server
              tag: java17
              pullPolicy: IfNotPresent
              pullSecret: ""
            replicaCount: 1
            resources:
              requests:
                memory: "{{ .requestMemory }}"
                cpu: "{{ .requestCPU }}"
              limits:
                memory: "{{ .limitMemory }}"
                cpu: "{{ .limitCPU }}"
            strategyType: Recreate
            nodeSelector: {}
            tolerations: []
            affinity: {}
            securityContext:
              runAsUser: 1000
              fsGroup: 2000
            livenessProbe:
              command:
                - mc-health
              initialDelaySeconds: 30
              periodSeconds: 5
              failureThreshold: 20
              successThreshold: 1
              timeoutSeconds: 1
            readinessProbe:
              command:
                - mc-health
              initialDelaySeconds: 30
              periodSeconds: 5
              failureThreshold: 20
              successThreshold: 1
              timeoutSeconds: 1
            startupProbe:
              command:
                - mc-health
              enabled: false
              failureThreshold: 30
              periodSeconds: 10
            initContainers: []
            sidecarContainers: []
            extraVolumes:
              - volumeMounts:
                  - name: prometheus-exporter-config
                    mountPath: /data/plugins/PrometheusExporter
                    readOnly: true
                volumes:
                  - name: prometheus-exporter-config
                    configMap:
                      name: minecraft-minecraft-prometheus
            minecraftServer:
              eula: "TRUE"
              version: 1.19.3
              type: "SPIGOT"
              # spigotDownloadUrl: https://hub.spigotmc.org/jenkins/job/BuildTools/152/artifact/target/BuildTools.jar
              # Set to true if running Feed The Beast and get an error like "unable to launch forgemodloader"
              ftbLegacyJavaFixer: false
              # One of: peaceful, easy, normal, and hard
              difficulty: peaceful
              # A comma-separated list of player names to whitelist.
              whitelist: esten_rye,flower_ada_bread,DracoIam
              # A comma-separated list of player names who should be admins.
              ops: esten_rye,flower_ada_bread,DracoIam
              # A server icon URL for server listings. Auto-scaled and transcoded.
              icon:
              # Max connected players.
              maxPlayers: 20
              # This sets the maximum possible size in blocks, expressed as a radius, that the world border can obtain.
              maxWorldSize: 10000
              # Allows players to travel to the Nether.
              allowNether: true
              # Allows server to announce when a player gets an achievement.
              announcePlayerAchievements: true
              # Enables command blocks.
              enableCommandBlock: true
              # If true, players will always join in the default gameMode even if they were previously set to something else.
              forcegameMode: false
              # Defines whether structures (such as villages) will be generated.
              generateStructures: true
              # If set to true, players will be set to spectator mode if they die.
              hardcore: false
              # The maximum height in which building is allowed.
              maxBuildHeight: 256
              # The maximum number of milliseconds a single tick may take before the server watchdog stops the server with the message. -1 disables this entirely.
              maxTickTime: 60000
              # Determines if animals will be able to spawn.
              spawnAnimals: false
              # Determines if monsters will be spawned.
              spawnMonsters: false
              # Determines if villagers will be spawned.
              spawnNPCs: true
              # Sets the area that non-ops can not edit (0 to disable)
              spawnProtection: 2
              # Max view distance (in chunks).
              viewDistance: 10
              # Define this if you want a specific map generation seed.
              levelSeed:
              # One of: creative, survival, adventure, spectator
              gameMode: survival
              # Message of the Day
              motd: "Welcome to Minecraft on Kubernetes!"
              # If true, enable player-vs-player damage.
              pvp: false
              # One of: DEFAULT, FLAT, LARGEBIOMES, AMPLIFIED, CUSTOMIZED
              levelType: DEFAULT
              # When levelType == FLAT or CUSTOMIZED, this can be used to further customize map generation.
              # ref: https://hub.docker.com/r/itzg/minecraft-server/
              generatorSettings:
              worldSaveName: world
              # If set, this URL will be downloaded at startup and used as a starting point
              downloadWorldUrl: "{{ .downloadWorldUrl }}"
              # force re-download of server file
              forceReDownload: false
              # If set, the modpack at this URL will be downloaded at startup
              downloadModpackUrl:
              # If true, old versions of downloaded mods will be replaced with new ones from downloadModpackUrl
              removeOldMods: false
              # A list of VanillaTweaks Share Codes to download. (https://vanillatweaks.net/share#wUq1iz => "wUq1iz")
              vanillaTweaksShareCodes: []
              # Optional URI to a resource pack. The player may choose to use it.
              resourcePackUrl:
              # Optional SHA-1 digest of the resource pack, in lowercase hexadecimal.
              # It is recommended to specify this, because it is used to verify the integrity of the resource pack.
              resourcePackSha:
              # When true, players will be prompted for a response and will be disconnected if they decline the required pack
              resourcePackEnforce: false
              # Check accounts against Minecraft account service.
              onlineMode: true
              # If you adjust this, you may need to adjust resources.requests above to match.
              memory: "{{ .jvmMemory }}"
              # General JVM options to be passed to the Minecraft server invocation
              jvmOpts: ""
              # Options like -X that need to proceed general JVM options
              jvmXXOpts: "-Xmx{{ .jvmMemory }}"
              # By default, the server configuration will be created and set based on the following environment variables, but only the first time the server is started
              # If you would like to override the server configuration each time the container starts up, you can set this to true
              # see https://github.com/itzg/docker-minecraft-server#server-configuration
              overrideServerProperties: false
              serviceType: LoadBalancer
              ## Set the port used if the serviceType is NodePort
              nodePort:
              # Set the external port of the service, usefull when using the LoadBalancer service type
              servicePort: 25565
              clusterIP:
              loadBalancerIP:
              # loadBalancerSourceRanges: []
              ## Set the externalTrafficPolicy in the Service to either Cluster or Local
              # externalTrafficPolicy: Cluster
              externalIPs:

              # A list of Spigot resources/plugins IDs to download.
              spigetResources:
                # BlueMap - https://www.spigotmc.org/resources/bluemap.83557/
                - 83557
                # Waypoints - https://www.spigotmc.org/resources/waypoints.66647/
                - 66647
                # Simple Minimap - https://www.spigotmc.org/resources/simpleminimap.108225/
                - 108225
                # Prometheus Exporter - https://www.spigotmc.org/resources/prometheus-exporter.36618/
                - 36618

              rcon:
                # If you enable this, make SURE to change your password below.
                enabled: true
                port: 25575
                existingSecret: rcon-password
                secretKey: password
                serviceType: ClusterIP
                ## Set the external port if the rcon serviceType is NodePort
                nodePort:
                clusterIP:
                loadBalancerIP:
                # loadBalancerSourceRanges: []
                ## Set the externalTrafficPolicy in the Service to either Cluster or Local
                # externalTrafficPolicy: Cluster

              extraPorts:
                # These options allow you to expose another port from the Minecraft server, plugins such
                # as dynmap (8123) and bluemap (8100) will require this for access to their web interfaces
                #
                - name: prometheus
                  containerPort: 9225
                  protocol: TCP
                  service:
                    enabled: true
                    embedded: false
                    annotations: {}
                    type: ClusterIP
                    loadBalancerIP: ""
                    loadBalancerSourceRanges: []
                    port: 9225
                  ingress:
                    enabled: false
                - name: map
                  containerPort: 8100
                  protocol: TCP
                  service:
                    enabled: true
                    embedded: false
                    annotations: {}
                    type: ClusterIP
                    loadBalancerIP: ""
                    loadBalancerSourceRanges: []
                    port: 8100
                  ingress:
                    ingressClassName: nginx
                    enabled: true
                    annotations:
                      cert-manager.io/cluster-issuer: letsencrypt-prod-clusterissuer-dns01
                      kubernetes.io/tls-acme: "true"
                      external-dns.alpha.kubernetes.io/hostname: "map.{{ .name }}.minecraft.rye.ninja"
                      external-dns.alpha.kubernetes.io/ttl: "120"
                    hosts:
                      - name: map.{{ .name }}.minecraft.rye.ninja
                        path: /
                    tls:
                      - secretName: map-tls
                        hosts:
                          - map.{{ .name }}.minecraft.rye.ninja

              query:
                # If you enable this, your server will be "published" to Gamespy
                enabled: false
                port: 25565

            ## Additional minecraft container environment variables
            ## Values can be either variable values or `valueFrom` yaml
            ##
            extraEnv:
              {}
              # some_variable: some value
              # another_variable:
              #   valueFrom:
              #     fieldRef:
              #       fieldPath: status.hostIP

            ## Additional environment variables to add to the minecraft container from
            ## ConfigMaps and Secrets
            ##
            envFrom: []

            persistence:
              annotations: {}
              ## minecraft data Persistent Volume Storage Class
              ## If defined, storageClassName: <storageClass>
              ## If set to "-", storageClassName: "", which disables dynamic provisioning
              ## If undefined (the default) or set to null, no storageClassName spec is
              ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
              ##   GKE, AWS & OpenStack)
              ##
              storageClass: "main-retain"
              dataDir:
                # Set this to false if you don't care to persist state between restarts.
                enabled: true
                Size: 2Gi
                # existingClaim: nil
                ## specify a subpath in the volume where the data is. Useful when sharing volumes with other apps.
                # subPath: /path/to/dataDir

            podAnnotations: {}

            deploymentAnnotations:
              operator.1password.io/item-path: "vaults/Home_Lab/items/rcon-api-arrendelle"
              operator.1password.io/item-name: "rcon-password"

            serviceAnnotations:
              external-dns.alpha.kubernetes.io/hostname: "{{ .name }}.minecraft.rye.ninja"

            rconServiceAnnotations:
              external-dns.alpha.kubernetes.io/hostname: "rcon.{{ .name }}.minecraft.rye.ninja"

            # PLEASE NOTE! rcon must be enabled above!  It does NOT require a nodePort or loadBalancerIP
            mcbackup:
              enabled: false

              image:
                repository: itzg/mc-backup
                tag: latest
                pullPolicy: IfNotPresent

              #  wait 2 minutes before starting
              initialDelay: 2m

              # ***set to 0 or smaller, script will run once and exit.  DO NOT SET TO 0 or smaller, this will cause K8s to kill your pod!***
              # backupInterval="1.5d" -> backup every one and a half days (36 hours)
              # backupInterval="2h 30m" -> backup every two and a half hours
              backupInterval: 24h

              # option lets you pause backups if no players are online.
              pauseIfNoPlayers: "false"

              # is set to a positive number, it'll delete old .tgz backup files from DEST_DIR. By default deletes backups older than a week.
              pruneBackupsDays: 7

              # Set to a negative value to retry indefinitely
              rconRetries: 5
              rconRetryInterval: 10s

              # is a comma-separated list of glob(3) patterns to exclude from backups. By default excludes all jar files (plugins, server files),
              # logs folder and cache (used by i.e. PaperMC server).
              excludes: "*.jar,cache,logs"

              # backup methods, see https://github.com/itzg/docker-mc-backup e.g. tar, rclone, restic
              backupMethod: tar
              # tar and rclone methods
              destDir: /backups
              # is a true/false flag that creates a symbolic link to the latest backup
              linkLatest: "false"
              # is the compression method used by tar. Valid value: gzip bzip2 zstd
              compressMethod: "gzip"
              # sets the parameters for zstd compression. The --long parameter affects RAM requirements for both compression and decompression
              # (the default of 25 means 2^25 bytes = 32 MB).
              zstdParameters: "-3 --long=25 --single-thread"
              # the name of the remote you've configured in your rclone.conf
              rcloneRemote:
              rcloneDestDir:
              rcloneCompressMethod: gzip

              # see https://rclone.org/ for details
              # this value is evaluated as a template
              rcloneConfig:
              # [remote]
              # type = google cloud storage
              # client_id =
              # client_secret =
              # token = {"AccessToken":"super","RefreshToken":"secret","Expiry":"date","Extra":null}
              # project_number = 12345678
              # object_acl = private
              # bucket_acl = private

              # if you prefer to create a secret from file (e.g. kubectl create secret generic my-rclone-config --from-file=~/.config/rclone/rclone.conf)
              # rcloneConfigExistingSecret: my-rclone-config

              resticRepository:
              # variable to define a space separated list of additional restic tags. see https://hub.docker.com/r/itzg/mc-backup
              resticAdditionalTags: "mc_backups"
              # see https://restic.readthedocs.io/en/latest/060_forget.html
              pruneResticRetention: "--keep-daily 7 --keep-weekly 5 --keep-monthly 12 --keep-yearly 75"

              # At least one of RESTIC_PASSWORD* env variables need to be defined, see https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html
              resticEnvs:
                []
                # RESTIC_PASSWORD: restic-password

              extraEnvs:
                []
                # Can be set to the timezone to use for logging
                # tz:

              resources:
                requests:
                  memory: 512Mi
                  cpu: 500m

              persistence:
                annotations: {}
                ## minecraft data Persistent Volume Storage Class
                ## If defined, storageClassName: <storageClass>
                ## If set to "-", storageClassName: "", which disables dynamic provisioning
                ## If undefined (the default) or set to null, no storageClassName spec is
                ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
                ##   GKE, AWS & OpenStack)
                ##
                # storageClass: "-"
                backupDir:
                  # Set this to false if you don't care to persist state between restarts.
                  enabled: false
                  # existingClaim: nil
                  Size: 1Gi

          
      destination:
        server: '{{ .server }}' # 'server' field of the secret
        namespace: '{{ .name }}'
      syncPolicy:
        automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
          prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
          selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
          allowEmpty: false # Allows deleting all application resources during automatic syncing ( false by default ).
        syncOptions:     # Sync options which modifies sync behavior
        - Validate=false # disables resource validation (equivalent to 'kubectl apply --validate=false') ( true by default ).
        - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
        - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
        - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
        - RespectIgnoreDifferences=true # When syncing changes, respect fields ignored by the ignoreDifferences configuration
        - ServerSideApply=true

        # The retry feature is available since v1.7
        retry:
          limit: 5 # number of failed sync attempt retries; unlimited number of attempts if less than 0
          backoff:
            duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
            factor: 2 # a factor to multiply the base duration after each failed retry
            maxDuration: 3m # the maximum amount of time allowed for the backoff strategy

      # RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for
      # informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional
      # circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the
      # space used to store the history, so we do not recommend increasing it.
      revisionHistoryLimit: 10
