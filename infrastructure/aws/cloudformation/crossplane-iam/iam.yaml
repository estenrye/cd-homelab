Resources:
  CreateEKSClusterPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: This policy allows creation of an EKS cluster.
      Path: /
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - ec2:CreateVpc
              - ec2:CreateSubnet
              - ec2:DescribeAvailabilityZones
              - ec2:CreateRouteTable
              - ec2:DeleteRouteTable
              - ec2:CreateRoute
              - ec2:ReplaceRoute
              - ec2:DeleteRoute
              - ec2:CreateInternetGateway
              - ec2:DeleteInternetGateway
              - ec2:AttachInternetGateway
              - ec2:AssociateRouteTable
              - ec2:ModifyVpcAttribute
              - ec2:RevokeSecurityGroupIngress
              - ec2:AuthorizeSecurityGroupEgress
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:UpdateSecurityGroupRuleDescriptionsEgress
              - ec2:RevokeSecurityGroupEgress
              - ec2:DeleteSecurityGroup
              - ec2:ModifySecurityGroupRules
              - ec2:UpdateSecurityGroupRuleDescriptionsIngress
              - ec2:CreateSecurityGroup
              - ec2:CreateTags
              - ec2:DescribeSecurityGroupRules
              - ec2:DescribeVpcs
              - ec2:DescribeSecurityGroups
            Resource: "*"
          - Effect: Allow
            Action:
              - eks:CreateCluster
              - eks:DescribeCluster
              - eks:DeleteCluster
            Resource: "*"
          - Effect: Allow
            Action:
              - eks:TagResource
              - eks:UntagResource
            Resource: "*"
          - Effect: Allow
            Action:
              - eks:CreateFargateProfile
              - eks:DeleteFargateProfile
              - eks:DescribeFargateProfile
              - eks:ListFargateProfiles
              - eks:TagResource
              - eks:UntagResource
            Resource: "*"
          - Effect: Allow
            Action:
              - eks:CreateNodegroup
              - eks:DeleteNodegroup
              - eks:DescribeNodegroup
              - eks:ListNodegroups
              - eks:TagResource
              - eks:UntagResource
            Resource: "*"
          - Effect: Allow
            Action:
              - eks:CreateAddon
              - eks:DeleteAddon
              - eks:DescribeAddon
              - eks:ListAddons
              - eks:TagResource
              - eks:UntagResource
            Resource: "*"
          - Effect: Allow
            Action:
              - eks:CreateUpdate
              - eks:DeleteUpdate
              - eks:DescribeUpdate
              - eks:ListUpdates
              - eks:TagResource
              - eks:UntagResource
            Resource: "*"
          - Effect: Allow
            Action:
              - eks:CreateClusterConfig
              - eks:DescribeClusterConfig
              - eks:DeleteClusterConfig
              - eks:TagResource
              - eks:UntagResource
            Resource: "*"
          - Effect: Allow
            Action:
              - eks:AssociateEncryptionConfig
              - eks:DisassociateEncryptionConfig
              - eks:ListEncryptionConfigs
              - eks:TagResource
              - eks:UntagResource
            Resource: "*"
          - Effect: Allow
            Action:
              - eks:CreateIdentityProviderConfig
              - eks:DeleteIdentityProviderConfig
              - eks:DescribeIdentityProviderConfig
              - eks:ListIdentityProviderConfigs
              - eks:TagResource
              - eks:UntagResource
            Resource: "*"
  CreateCrossplaneIAMUser:
    Type: AWS::IAM::User
    Properties:
      ManagedPolicyArns: 
        - { "Ref": "CreateEKSClusterPolicy" }
      Path: /

  CreateCrossplaneIAMAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: { "Ref": "CreateCrossplaneIAMUser" }

Outputs:
  Username:
    Value: { "Ref": "CreateCrossplaneIAMUser"}
  UserARN:
    Value: { "Fn::GetAtt": [ "CreateCrossplaneIAMUser", "Arn" ] }
  PolicyARN:
    Value: { "Ref": "CreateEKSClusterPolicy" }
  AccessKeyID:
    Value: { "Ref": "CreateCrossplaneIAMAccessKey" }
  SecretAccessKey:
    Value: { "Fn::GetAtt": [ "CreateCrossplaneIAMAccessKey", "SecretAccessKey" ] }