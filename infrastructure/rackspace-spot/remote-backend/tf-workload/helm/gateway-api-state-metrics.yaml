image:
  registry: registry.k8s.io
  repository: kube-state-metrics/kube-state-metrics
  # If unset use v + .Charts.appVersion
  tag: "v2.12.0"
  sha: ""
  pullPolicy: IfNotPresent

extraArgs:
 - --custom-resource-state-only

rbac:
  # If true, create & use RBAC resources
  create: true

  # Set to a rolename to use existing role - skipping role creating - but still doing serviceaccount and rolebinding to it, rolename set here.
  # useExistingRole: your-existing-role

  # If set to false - Run without Cluteradmin privs needed - ONLY works if namespace is also set (if useExistingRole is set this name is used as ClusterRole or Role to bind to)
  useClusterRole: true

  # Add permissions for CustomResources' apiGroups in Role/ClusterRole. Should be used in conjunction with Custom Resource State Metrics configuration
  # Example:
  # - apiGroups: ["monitoring.coreos.com"]
  #   resources: ["prometheuses"]
  #   verbs: ["list", "watch"]
  extraRules:
    - apiGroups:
        - gateway.networking.k8s.io
      resources:
        - gateways
        - gatewayclasses
        - httproutes
        - grpcroutes
        - tcproutes
        - tlsroutes
        - udproutes
        - backendtlspolicies
      verbs:
        - list
        - watch

prometheus:
  monitor:
    enabled: true
    annotations: {}
    additionalLabels: {}
    namespace: ""
    namespaceSelector: []
    jobLabel: "gateway-api-state-metrics"
    targetLabels: []
    podTargetLabels: []
    interval: ""
    ## SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.
    ##
    sampleLimit: 0

    ## TargetLimit defines a limit on the number of scraped targets that will be accepted.
    ##
    targetLimit: 0

    ## Per-scrape limit on number of labels that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.
    ##
    labelLimit: 0

    ## Per-scrape limit on length of labels name that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.
    ##
    labelNameLengthLimit: 0

    ## Per-scrape limit on length of labels value that will be accepted for a sample. Only valid in Prometheus versions 2.27.0 and newer.
    ##
    labelValueLengthLimit: 0
    scrapeTimeout: ""
    proxyUrl: ""
    ## Whether to enable HTTP2 for servicemonitor
    # enableHttp2: false
    selectorOverride: {}
    honorLabels: false
    metricRelabelings: []
    relabelings: []
    scheme: ""
    ## File to read bearer token for scraping targets
    bearerTokenFile: ""
    ## Secret to mount to read bearer token for scraping targets. The secret needs
    ## to be in the same namespace as the service monitor and accessible by the
    ## Prometheus Operator
    bearerTokenSecret: {}
      # name: secret-name
      # key:  key-name
    tlsConfig: {}

# Available collectors for kube-state-metrics.
# By default, all available resources are enabled, comment out to disable.
collectors: []

# Enabling kubeconfig will pass the --kubeconfig argument to the container
kubeconfig:
  enabled: false
  # base64 encoded kube-config file
  secret:

# Enabling support for customResourceState, will create a configMap including your config that will be read from kube-state-metrics
customResourceState:
  enabled: true
  # Add (Cluster)Role permissions to list/watch the customResources defined in the config to rbac.extraRules
  config:
    kind: CustomResourceStateMetrics
    spec:
      resources:
        - groupVersionKind:
            group: gateway.networking.k8s.io
            kind: "Gateway"
            version: "v1"
          metricNamePrefix: gatewayapi_gateway
          labelsFromPath:
            name:
            - metadata
            - name
            namespace:
            - metadata
            - namespace
          metrics:
          - name: "info"
            help: "Gateway information"
            each:
              type: Info
              info:
                labelsFromPath:
                  gatewayclass_name: [spec, gatewayClassName]
          - name: "labels"
            help: "Kubernetes labels converted to Prometheus labels."
            each:
              type: Info
              info:
                path: [metadata]
                labelsFromPath:
                  "*": [labels]
          - name: "created"
            help: "created timestamp"
            each:
              type: Gauge
              gauge:
                path: [metadata, creationTimestamp]
          - name: "deleted"
            help: "deletion timestamp"
            each:
              type: Gauge
              gauge:
                path: [metadata, deletionTimestamp]
          - name: "listener_info"
            help: "Gateway listener information"
            each:
              type: Info
              info:
                path: [spec, listeners]
                labelsFromPath:
                  listener_name: ["name"]
                  port: ["port"]
                  protocol: ["protocol"]
                  hostname: ["hostname"]
                  tls_mode: ["tls","mode"]
          - name: "status"
            help: "status condition"
            each:
              type: Gauge
              gauge:
                path: [status, conditions]
                labelsFromPath:
                  type: ["type"]
                valueFrom: ["status"]
          - name: "status_listener_attached_routes"
            help: "Number of attached routes for a listener"
            each:
              type: Gauge
              gauge:
                path: [status, listeners]
                labelsFromPath:
                  listener_name: ["name"]
                valueFrom: ["attachedRoutes"]
          - name: "status_address_info"
            help: "Gateway address types and values"
            each:
              type: Info
              info:
                path: [status, addresses]
                labelsFromPath:
                  type: ["type"]
                  value: ["value"]
        - groupVersionKind:
            group: gateway.networking.k8s.io
            kind: "GatewayClass"
            version: "v1"
          metricNamePrefix: gatewayapi_gatewayclass
          labelsFromPath:
            name:
            - metadata
            - name
          metrics:
          - name: "info"
            help: "GatewayClass information"
            each:
              type: Info
              info:
                labelsFromPath:
                  controller_name: [spec, controllerName]
          - name: "labels"
            help: "Kubernetes labels converted to Prometheus labels."
            each:
              type: Info
              info:
                path: [metadata]
                labelsFromPath:
                  "*": [labels]
          - name: "created"
            help: "created timestamp"
            each:
              type: Gauge
              gauge:
                path: [metadata, creationTimestamp]
          - name: "deleted"
            help: "deletion timestamp"
            each:
              type: Gauge
              gauge:
                path: [metadata, deletionTimestamp]
          - name: "status"
            help: "status condition"
            each:
              type: Gauge
              gauge:
                path: [status, conditions]
                labelsFromPath:
                  type: ["type"]
                valueFrom: ["status"]
        - groupVersionKind:
            group: gateway.networking.k8s.io
            kind: "HTTPRoute"
            version: "v1"
          metricNamePrefix: gatewayapi_httproute
          labelsFromPath:
            name:
            - metadata
            - name
            namespace:
            - metadata
            - namespace
          metrics:
          - name: "labels"
            help: "Kubernetes labels converted to Prometheus labels."
            each:
              type: Info
              info:
                path: [metadata]
                labelsFromPath:
                  "*": [labels]
          - name: "created"
            help: "created timestamp"
            each:
              type: Gauge
              gauge:
                path: [metadata, creationTimestamp]
          - name: "deleted"
            help: "deletion timestamp"
            each:
              type: Gauge
              gauge:
                path: [metadata, deletionTimestamp]
          - name: "hostname_info"
            help: "Hostname information"
            each:
              type: Info
              info:
                path: [spec, hostnames]
                labelsFromPath:
                  hostname: []
          - name: "parent_info"
            help: "Parent references that the httproute wants to be attached to"
            each:
              type: Info
              info:
                path: [spec, parentRefs]
                labelsFromPath:
                  parent_group: ["group"]
                  parent_kind: ["kind"]
                  parent_name: ["name"]
                  parent_namespace: ["namespace"]
                  parent_section_name: ["sectionName"]
                  parent_port: ["port"]
          - name: "status_parent_info"
            help: "Parent references that the httproute is attached to"
            each:
              type: Info
              info:
                path: [status, parents]
                labelsFromPath:
                  controller_name: ["controllerName"]
                  parent_group: ["parentRef", "group"]
                  parent_kind: ["parentRef", "kind"]
                  parent_name: ["parentRef", "name"]
                  parent_namespace: ["parentRef", "namespace"]
                  parent_section_name: ["parentRef", "sectionName"]
                  parent_port: ["parentRef", "port"]
        - groupVersionKind:
            group: gateway.networking.k8s.io
            kind: "GRPCRoute"
            version: "v1alpha2"
          metricNamePrefix: gatewayapi_grpcroute
          labelsFromPath:
            name:
            - metadata
            - name
            namespace:
            - metadata
            - namespace
          metrics:
          - name: "labels"
            help: "Kubernetes labels converted to Prometheus labels."
            each:
              type: Info
              info:
                path: [metadata]
                labelsFromPath:
                  "*": [labels]
          - name: "created"
            help: "created timestamp"
            each:
              type: Gauge
              gauge:
                path: [metadata, creationTimestamp]
          - name: "deleted"
            help: "deletion timestamp"
            each:
              type: Gauge
              gauge:
                path: [metadata, deletionTimestamp]
          - name: "hostname_info"
            help: "Hostname information"
            each:
              type: Info
              info:
                path: [spec, hostnames]
                labelsFromPath:
                  hostname: []
          - name: "parent_info"
            help: "Parent references that the grpcroute wants to be attached to"
            each:
              type: Info
              info:
                path: [spec, parentRefs]
                labelsFromPath:
                  parent_group: ["group"]
                  parent_kind: ["kind"]
                  parent_name: ["name"]
                  parent_namespace: ["namespace"]
                  parent_section_name: ["sectionName"]
                  parent_port: ["port"]
          - name: "status_parent_info"
            help: "Parent references that the grpcroute is attached to"
            each:
              type: Info
              info:
                path: [status, parents]
                labelsFromPath:
                  controller_name: ["controllerName"]
                  parent_group: ["parentRef", "group"]
                  parent_kind: ["parentRef", "kind"]
                  parent_name: ["parentRef", "name"]
                  parent_namespace: ["parentRef", "namespace"]
                  parent_section_name: ["parentRef", "sectionName"]
                  parent_port: ["parentRef", "port"]
        - groupVersionKind:
            group: gateway.networking.k8s.io
            kind: "TCPRoute"
            version: "v1alpha2"
          metricNamePrefix: gatewayapi_tcproute
          labelsFromPath:
            name:
            - metadata
            - name
            namespace:
            - metadata
            - namespace
          metrics:
          - name: "labels"
            help: "Kubernetes labels converted to Prometheus labels."
            each:
              type: Info
              info:
                path: [metadata]
                labelsFromPath:
                  "*": [labels]
          - name: "created"
            help: "created timestamp"
            each:
              type: Gauge
              gauge:
                path: [metadata, creationTimestamp]
          - name: "deleted"
            help: "deletion timestamp"
            each:
              type: Gauge
              gauge:
                path: [metadata, deletionTimestamp]
          - name: "parent_info"
            help: "Parent references that the tcproute wants to be attached to"
            each:
              type: Info
              info:
                path: [spec, parentRefs]
                labelsFromPath:
                  parent_group: ["group"]
                  parent_kind: ["kind"]
                  parent_name: ["name"]
                  parent_namespace: ["namespace"]
                  parent_section_name: ["sectionName"]
                  parent_port: ["port"]
          - name: "status_parent_info"
            help: "Parent references that the tcproute is attached to"
            each:
              type: Info
              info:
                path: [status, parents]
                labelsFromPath:
                  controller_name: ["controllerName"]
                  parent_group: ["parentRef", "group"]
                  parent_kind: ["parentRef", "kind"]
                  parent_name: ["parentRef", "name"]
                  parent_namespace: ["parentRef", "namespace"]
                  parent_section_name: ["parentRef", "sectionName"]
                  parent_port: ["parentRef", "port"]
        - groupVersionKind:
            group: gateway.networking.k8s.io
            kind: "TLSRoute"
            version: "v1alpha2"
          metricNamePrefix: gatewayapi_tlsroute
          labelsFromPath:
            name:
            - metadata
            - name
            namespace:
            - metadata
            - namespace
          metrics:
          - name: "labels"
            help: "Kubernetes labels converted to Prometheus labels."
            each:
              type: Info
              info:
                path: [metadata]
                labelsFromPath:
                  "*": [labels]
          - name: "created"
            help: "created timestamp"
            each:
              type: Gauge
              gauge:
                path: [metadata, creationTimestamp]
          - name: "deleted"
            help: "deletion timestamp"
            each:
              type: Gauge
              gauge:
                path: [metadata, deletionTimestamp]
          - name: "hostname_info"
            help: "Hostname information"
            each:
              type: Info
              info:
                path: [spec, hostnames]
                labelsFromPath:
                  hostname: []
          - name: "parent_info"
            help: "Parent references that the tlsroute wants to be attached to"
            each:
              type: Info
              info:
                path: [spec, parentRefs]
                labelsFromPath:
                  parent_group: ["group"]
                  parent_kind: ["kind"]
                  parent_name: ["name"]
                  parent_namespace: ["namespace"]
                  parent_section_name: ["sectionName"]
                  parent_port: ["port"]
          - name: "status_parent_info"
            help: "Parent references that the tlsroute is attached to"
            each:
              type: Info
              info:
                path: [status, parents]
                labelsFromPath:
                  controller_name: ["controllerName"]
                  parent_group: ["parentRef", "group"]
                  parent_kind: ["parentRef", "kind"]
                  parent_name: ["parentRef", "name"]
                  parent_namespace: ["parentRef", "namespace"]
                  parent_section_name: ["parentRef", "sectionName"]
                  parent_port: ["parentRef", "port"]
        - groupVersionKind:
            group: gateway.networking.k8s.io
            kind: "UDPRoute"
            version: "v1alpha2"
          metricNamePrefix: gatewayapi_udproute
          labelsFromPath:
            name:
            - metadata
            - name
            namespace:
            - metadata
            - namespace
          metrics:
          - name: "labels"
            help: "Kubernetes labels converted to Prometheus labels."
            each:
              type: Info
              info:
                path: [metadata]
                labelsFromPath:
                  "*": [labels]
          - name: "created"
            help: "created timestamp"
            each:
              type: Gauge
              gauge:
                path: [metadata, creationTimestamp]
          - name: "deleted"
            help: "deletion timestamp"
            each:
              type: Gauge
              gauge:
                path: [metadata, deletionTimestamp]
          - name: "parent_info"
            help: "Parent references that the udproute wants to be attached to"
            each:
              type: Info
              info:
                path: [spec, parentRefs]
                labelsFromPath:
                  parent_group: ["group"]
                  parent_kind: ["kind"]
                  parent_name: ["name"]
                  parent_namespace: ["namespace"]
                  parent_section_name: ["sectionName"]
                  parent_port: ["port"]
          - name: "status_parent_info"
            help: "Parent references that the udproute is attached to"
            each:
              type: Info
              info:
                path: [status, parents]
                labelsFromPath:
                  controller_name: ["controllerName"]
                  parent_group: ["parentRef", "group"]
                  parent_kind: ["parentRef", "kind"]
                  parent_name: ["parentRef", "name"]
                  parent_namespace: ["parentRef", "namespace"]
                  parent_section_name: ["parentRef", "sectionName"]
                  parent_port: ["parentRef", "port"]
        - groupVersionKind:
            group: gateway.networking.k8s.io
            kind: "BackendTLSPolicy"
            version: "v1alpha2"
          metricNamePrefix: gatewayapi_backendtlspolicy
          labelsFromPath:
            name:
            - metadata
            - name
            namespace:
            - metadata
            - namespace
          metrics:
          - name: "labels"
            help: "Kubernetes labels converted to Prometheus labels."
            each:
              type: Info
              info:
                path: [metadata]
                labelsFromPath:
                  "*": [labels]
          - name: "created"
            help: "created timestamp"
            each:
              type: Gauge
              gauge:
                path: [metadata, creationTimestamp]
          - name: "deleted"
            help: "deletion timestamp"
            each:
              type: Gauge
              gauge:
                path: [metadata, deletionTimestamp]
          - name: "target_info"
            help: "Target references that the backendtlspolicy wants to be attached to"
            each:
              type: Info
              info:
                path: [spec, targetRef]
                labelsFromPath:
                  target_group: ["group"]
                  target_kind: ["kind"]
                  target_name: ["name"]
                  target_namespace: ["namespace"]


# Enable self metrics configuration for service and Service Monitor
# Default values for telemetry configuration can be overridden
# If you set telemetryNodePort, you must also set service.type to NodePort
selfMonitor:
  enabled: false
  # telemetryHost: 0.0.0.0
  # telemetryPort: 8081
  # telemetryNodePort: 0

